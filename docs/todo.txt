- Detalles a ver con el cliente:
  * tamaño de las tarjetas de producto
  * subir las imágenes por URL o localmente?

- Caja:
  * no mostrar productos sin receta
  * ver donde agregar la advertencia de que no se pueden productos que no
    tienen receta (puede ser en otro módulo como recetas)

- Recetas:
  * Corregir que 15g se están convertiendo a 0.02kg
  * Agregar receta de smoothie de fresa para pruebas:
    - Fresa: 100g
    - Leche: 200ml
    - Azúcar: 15g
    - Hielo: 50g
  * ⚠️ IMPORTANTE: Análisis de cambio de unidades en insumos existentes
    - Ver documento: docs/ANALISIS_CAMBIO_UNIDADES.md
    - Problemas: recetas inconsistentes, inventario confuso, reportes incorrectos
    - Recomendación: NO cambiar unidades existentes, crear nuevos insumos

- Reportes:
  * ver el detalle de la fecha de corte
  * considerar agregar filtros para los demás atributos
  * considerar edición/borrado de reportes

- MISC:
  - Registrar la compra de insumos como gastos
  - Revisar si coinciden la unidad de compra y uso de insumos
  - IMPORTANTE: que hacer con la variación de ingredientes?
    e.g., leche entera o deslactosada, con o sin azúcar, etc
  - Ver por que no se puede iniciar sesión desde el teléfono
  - Considerar borrar los logs de depuración 
  - Considerar hacer un componente universal para cada uno:
    - Tablas
    - Paginación
  - Retoques (después de finalizar la base de todos los módulos):
    * Que todos los items de la clase productos sean del mismo tamaño
      independientemente del tamaño de imagen o longitud de texto
    * Estandarizar estilo de la paginación en todos los módulos
    * Considerar que en todos los modulos el scroll solo sea sobre los contenidos

  - Optimizaciones de rendimiento (para implementar después):
    * Lazy loading de modales (cargar solo cuando se necesiten)
    * Event delegation para botones de modales (un solo listener global)
    * Debouncing en búsquedas (evitar múltiples llamadas a API)
    * Memoización de datos frecuentemente usados
    * Optimización de consultas SQL con índices apropiados
    * Compresión de imágenes y assets estáticos
    * Cache de datos en localStorage para datos que no cambian frecuentemente